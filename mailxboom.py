#--------------------------------------------------
# Encrypted By : RA FI
# Join TG : https://t.me/api_not_found
# GitHub : rafixt
# Telegram : @rafi_not_found
#--------------------------------------------------

_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))